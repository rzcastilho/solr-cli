name: CD

on:
  push:
    tags:
    - 'v*'

permissions: write-all

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: earthly/actions-setup@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: "0.7.4"
      - uses: actions/checkout@v4
      - name: Build Binaries
        run: earthly +release
      - name: Save Assets to Cache
        uses: actions/cache/save@v3
        with:
          path: ./assets
          key: ${{ runner.os }}-${{ github.ref }}-${{ github.run_id }}
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: solr-cli ${{ github.ref }}
          draft: false
          prerelease: false
  assets:
    name: Assets
    runs-on: ubuntu-latest
    strategy:
      matrix:
        suffix: [linux, macos, windows.exe]
    needs: release
    steps:
      - name: Restore Assets from Cache
        uses: actions/cache/restore@v3
        with:
          path: ./assets
          key: ${{ runner.os }}-${{ github.ref }}-${{ github.run_id }}
      - name: Upload Release Assets
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./assets/solr_cli_${{ matrix.suffix }}
          asset_name: solr-cli-${{ github.ref_name }}-${{ matrix.suffix }}
          asset_content_type: application/octet-stream
